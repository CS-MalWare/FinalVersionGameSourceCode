@startuml

title __MAPSTATE's Class Diagram__\n

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.Chest {
            - animChannel : AnimChannel
            - animControl : AnimControl
            - app : SimpleApplication
            - bip001 : Node
            - bullet : BulletAppState
            - camNode : Node
            - capsuleShape : CapsuleCollisionShape
            - character : Node
            - chestNode : AudioNode
            - distance : float
            - height : float
            - modelY : float
            - physics : PhysicsSpace
            - place : Vector3f
            - radius : float
            - rootNode : Node
            - rotateX : float
            - rotateY : float
            - rotateZ : float
            - scene : Node
            - ske : BoundingVolume
            - skeleton : Spatial
            - skeletonControl : CharacterControl
            - stepHeight : float
            - volume : float
            + Chest()
            + Chest()
            + Chest()
            + Chest()
            + Chest()
            + get()
            + initAnim()
            + initModel()
            + initMusic()
            + initPhysics()
            + open()
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.FifthWorldState {
            + Scene : Spatial
            + landScape : RigidBodyControl
            + physics : PhysicsSpace
            + sceneShape : CollisionShape
            - app : SimpleApplication
            - rootNode : Node
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.FirstWorldState {
            + Scene : Spatial
            + landScape : RigidBodyControl
            + physics : PhysicsSpace
            + sceneShape : CollisionShape
            - app : SimpleApplication
            - rootNode : Node
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.ForthWorldMap {
            + Scene : Spatial
            + landScape : RigidBodyControl
            + physics : PhysicsSpace
            + sceneShape : CollisionShape
            - app : SimpleApplication
            - rootNode : Node
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.SecondWorldMap {
            + Scene : Spatial
            + landScape : RigidBodyControl
            + physics : PhysicsSpace
            + sceneShape : CollisionShape
            - app : SimpleApplication
            - rootNode : Node
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.SkyBox {
            ~ sky : Spatial
            - app : SimpleApplication
            - finish : int
            - pic : Spatial
            - rootNode : Node
            + SkyBox()
            + finish()
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.SkyBox2 {
            ~ sky : Spatial
            - app : SimpleApplication
            - finish : int
            - pic : Spatial
            - rootNode : Node
            + SkyBox2()
            + finish()
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.ThirdWorldMap {
            + Scene : Spatial
            + landScape : RigidBodyControl
            + physics : PhysicsSpace
            + sceneShape : CollisionShape
            - app : SimpleApplication
            - rootNode : Node
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.skyBox4 {
            ~ sky : Spatial
            - app : SimpleApplication
            - finish : int
            - pic : Spatial
            - rootNode : Node
            + finish()
            + skyBox4()
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.skyBox5 {
            ~ sky : Spatial
            - app : SimpleApplication
            - finish : int
            - pic : Spatial
            - rootNode : Node
            + finish()
            + skyBox5()
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  namespace gamesource {
    namespace State {
      namespace mapState {
        class gamesource.State.mapState.skyBox6 {
            ~ sky : Spatial
            - app : SimpleApplication
            - finish : int
            - pic : Spatial
            - rootNode : Node
            + finish()
            + skyBox6()
            # cleanup()
            # initialize()
            # onDisable()
            # onEnable()
        }
      }
    }
  }
  

  gamesource.State.mapState.Chest -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.FifthWorldState -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.FirstWorldState -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.ForthWorldMap -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.SecondWorldMap -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.SkyBox -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.SkyBox2 -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.ThirdWorldMap -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.skyBox4 -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.skyBox5 -up-|> com.jme3.app.state.BaseAppState
  gamesource.State.mapState.skyBox6 -up-|> com.jme3.app.state.BaseAppState


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
